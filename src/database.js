require('dotenv').config();
const mongoose = require('mongoose');

// Conex√£o com MongoDB Atlas + Tratamento de erros
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      serverSelectionTimeoutMS: 5000 // Timeout ap√≥s 5 segundos
    });
    
    console.log('\x1b[32m%s\x1b[0m', '‚úÖ  Conex√£o com MongoDB estabelecida com sucesso!');
    console.log('\x1b[36m%s\x1b[0m', `üìä  Database: ${mongoose.connection.name}`);
    console.log('\x1b[33m%s\x1b[0m', 'üîÑ  Verificando dados de teste...');

    // Teste de leitura/escrita
    const testDoc = await mongoose.connection.db.collection('test').insertOne({
      message: "Teste de conex√£o FURIA eSports",
      timestamp: new Date()
    });
    
    console.log('\x1b[32m%s\x1b[0m', `üìù  Documento de teste inserido (ID: ${testDoc.insertedId})`);

  } catch (err) {
    console.error('\x1b[31m%s\x1b[0m', '‚ùå  Falha na conex√£o com MongoDB:');
    console.error('\x1b[31m%s\x1b[0m', `   ‚Üí ${err.message}`);
    console.log('\x1b[33m%s\x1b[0m', 'üîç  Verifique:');
    console.log('   1. String de conex√£o no .env');
    console.log('   2. Permiss√µes de IP no Atlas');
    console.log('   3. Usu√°rio/senha do banco');
    process.exit(1); // Encerra o aplicativo com erro
  }
};

module.exports = {
  connectDB,
  mongoose
};